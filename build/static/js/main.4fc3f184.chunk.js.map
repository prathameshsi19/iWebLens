{"version":3,"sources":["components/login/login.jsx","components/login/register.jsx","App.js","serviceWorker.js","index.js","user.svg"],"names":["Login","props","clearErrorState","setState","errors","cognito","blankfield","handleSubmit","event","a","alert","state","username","preventDefault","Auth","signIn","password","user","console","log","history","push","err","message","handleUsernameChange","target","value","handlePasswordChange","className","ref","this","containerRef","src","loginImg","alt","onSubmit","htmlFor","type","name","placeholder","onChange","Component","Register","isLoading","email","signUp","attributes","newUser","handleConfirmationSubmit","confirmSignUp","code","handleEmailChange","handleCodeChange","length","registerImg","renderForm","renderConfirmationForm","React","App","isLogginActive","rightSide","classList","add","remove","prevState","current","currentActive","container","onClick","changeState","bind","RightSide","Boolean","window","location","hostname","match","Amplify","configure","mandatorySignId","region","userPoolId","userPoolWebClientId","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","module","exports"],"mappings":"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","file":"static/js/main.4fc3f184.chunk.js","sourcesContent":["import React from \"react\";\r\nimport  { Component } from 'react';\r\nimport loginImg from \"../../user.svg\";\r\nimport { Auth } from \"aws-amplify\";\r\n//import FormErrors from \"../FormErrors\";\r\nexport class Login extends Component{\r\n\t\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tusername: \"\",\r\n\t\t\tpassword: \"\",\r\n\t\t\t\r\n\t\t\terrors: {\r\n\t\t\t  cognito: null,\r\n\t\t\t  blankfield: false\r\n\t\t\t}\r\n\t\t  }\r\n\t\t}\r\n\r\n\t\tclearErrorState = () => {\r\n\t\t\tthis.setState({\r\n\t\t\t  errors: {\r\n\t\t\t\tcognito: null,\r\n\t\t\t\tblankfield: false\r\n\t\t\t  }\r\n\t\t\t});\r\n\t\t  }\r\n\r\n\t\thandleSubmit = async event => {\r\n\t\talert(`${this.state.username}`)\r\n\t\t event.preventDefault(); \r\n\r\n\t\t //aws \r\n\t\t try{\r\n\t\t\tconst user = await Auth.signIn(this.state.username, this.state.password);\r\n\t\t\t\tconsole.log(user);\r\n\t\t\t\tthis.props.history.push(\"./welcome\");\r\n \r\n\t\t }catch(error){\r\n\t\t\t let err = null;\r\n\t\t\t !error.message ? err = { \"message\": error } : err = error;\r\n\t\t\t this.setState({\r\n\t\t\t\t errors: {\r\n\t\t\t\t\t ...this.state.errors,\r\n\t\t\t\t\t cognito: err\r\n\t\t\t\t }\r\n \r\n\t\t\t });\r\n \r\n\t\t }\r\n\t\t};\r\n\r\n\t\thandleUsernameChange = (event) => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tusername: event.target.value\r\n\t\t\t})\r\n\t\t}\r\n\t\thandlePasswordChange = (event) => {\r\n\t\t  this.setState({\r\n\t\t\t  password: event.target.value\r\n\t\t  })\r\n\t  }\r\n\r\n\trender() {\r\n\treturn (\r\n\t<div className=\"base-container\" ref={this.props.containerRef}>\r\n\t\r\n\t<div className=\"header\">Login</div>\r\n\r\n\t<div className=\"content\">\r\n\t<div className=\"image\">\r\n\t\t<img src={loginImg} alt=\"login\"/>\r\n\t\t<div className=\"header\">Welcome to iWebLens</div>\r\n\t</div>\r\n\t\r\n\t<div className=\"header\">Login</div>\r\n\t<form onSubmit={this.handleSubmit}>\r\n\t<div className=\"form\">\r\n     <div className=\"form-group\">\r\n     <label htmlFor=\"username\">Username</label>\r\n     <input type=\"text\" name=\"username\" placeholder=\"username\" value={this.state.username} onChange={this.handleUsernameChange} />\r\n\t</div>\r\n\t<div className=\"form-group\">\r\n     <label htmlFor=\"password\">Password</label>\r\n     <input type=\"password\" name=\"pasword\" placeholder=\"password\" value={this.state.password} onChange={this.handlePasswordChange} />\r\n\t</div>\r\n\t<div className=\"footer\">\r\n\t<button type=\"submit\" className=\"btn\">\r\n\tLogin\r\n\t</button>\r\n\t</div>\r\n\t</div>\r\n\t</form>\r\n\t</div>\r\n\t\r\n\t</div>\r\n\t);\r\n\t}\r\n}\r\n\r\n","import React from \"react\";\r\nimport registerImg from \"../../user.svg\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport welcome from \"./welcome\";\r\n\r\nexport class Register extends React.Component{\r\n\t\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\t\r\n\tthis.state = {\r\n\t\tisLoading: false,\r\n\t\tusername: \"\",\r\n\t\tpassword: \"\",\r\n\t\temail: \"\",\r\n\t\tcode: \"\",\r\n\t\tnewUser: null,\r\n\t\terrors: {\r\n\t\t  cognito: null,\r\n\t\t  blankfield: false\r\n\t\t}\r\n\t  }\r\n\t}\r\n\t//newaddition\r\n\tvalidateForm() {\r\n\t\treturn (\r\n\t\t\tthis.state.email.length > 0 &&\r\n\t\t\tthis.state.password.length > 0 \r\n\t\t\t\r\n\t\t);\r\n\t}\r\n\t\r\n\t  clearErrorState = () => {\r\n\t\tthis.setState({\r\n\t\t  errors: {\r\n\t\t\tcognito: null,\r\n\t\t\tblankfield: false\r\n\t\t  }\r\n\t\t});\r\n\t  }\r\n\t  handleSubmit = async event => {\r\n\t\t \r\n\t\talert(`${this.state.username}`)\r\n\t\t event.preventDefault(); \r\n\t\t//addition \r\n\t\t this.setState({ isLoading: true });\r\n\t\t //aws\r\n\t\t const { username, email, password } = this.state;\r\n\t   try{\r\n\t\t   const newUser = await Auth.signUp({\r\n\t\t\t   username,\r\n\t\t\t   password,\r\n\t\t\t   attributes:{\r\n\t\t\t\temail: email\r\n\t\t\t   }\r\n\t\t\t  \r\n\t\t\t   \r\n\t\t\t   \r\n\t\t\t   });\r\n\t\t\t   console.log(newUser);\r\n\t\t\t   this.setState({\r\n\t\t\t\tnewUser\r\n\t\t\t});\r\n\t\t\t   \r\n\t\t\t   \r\n\t\t\t   \r\n\r\n\t\t}catch(error){\r\n\t\t\tlet err = null;\r\n\t\t\t!error.message ? err = { \"message\": error } : err = error;\r\n\t\t\tthis.setState({\r\n\t\t\t\terrors: {\r\n\t\t\t\t\t...this.state.errors,\r\n\t\t\t\t\tcognito: err\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\r\n\t\t}\r\n\t\t//addition\r\n\t\tthis.setState({ isLoading: false });\r\n\t  };\r\n\t//addition\r\n\thandleConfirmationSubmit = async event => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis.setState({ isLoading: true });\r\n\r\n\t\ttry {\r\n\t\t\tawait Auth.confirmSignUp(this.state.username, this.state.code);\r\n\t\t\tawait Auth.signIn(this.state.email, this.state.password);\r\n\r\n\t\t\t//this.props.userHasAuthenticated(true);\r\n\t\t\tthis.props.history.push('/');\r\n\t\t} catch (e) {\r\n\t\t\talert(e.message);\r\n\t\t\tthis.setState({ isLoading: false });\r\n\t\t}\r\n\t};\r\n\r\n\t  \r\n\t\r\n\t  handleUsernameChange = (event) => {\r\n\t\t  this.setState({\r\n\t\t\t  username: event.target.value\r\n\t\t  })\r\n\t  }\r\n\t  handlePasswordChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tpassword: event.target.value\r\n\t\t})\r\n\t}\r\n\thandleEmailChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\temail: event.target.value\r\n\t\t})\r\n\t}\r\n\r\n\thandleCodeChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tcode: event.target.value\r\n\t\t})\r\n\t}\r\n\r\n\t\t//addition\r\n\t\trenderConfirmationForm() {\r\n\t\t\treturn (\r\n\t\t\t\t<form onSubmit={this.handleConfirmationSubmit}>  \r\n\t\t\t\t\t<div className=\"form\">\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label htmlFor=\"confirmationcode\">Confirmation Code</label>\r\n\t\t\t\t\t<input type=\"text\" name=\"code\" placeholder=\"code\" value={this.state.code} onChange={this.handleCodeChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button type=\"submit\" isLoading={this.state.isLoading} >Submit</button>\r\n\t\t\t\t</form>\r\n\t\t\t\t\r\n\t\t\t)\r\n\t\t}\r\n\r\n\trenderForm() {\r\n\treturn (\r\n\t\t<div className=\"base-container\" ref={this.props.containerRef}>\r\n\t\r\n\t\t<div className=\"header\">Login</div>\r\n\t\r\n\t\t<div className=\"content\">\r\n\t\t<div className=\"image\">\r\n\t\t\t<img src={registerImg} alt=\"register\"/>\r\n\t\t\t<div className=\"header\">Welcome to iWebLens</div>\r\n\t\t</div>\r\n\t\t\r\n\t\t<div className=\"header\">Login</div>\r\n\t\t<form onSubmit={this.handleSubmit} >\r\n\t\t<div className=\"form\" >\r\n\t\t <div className=\"form-group\">\r\n\t\t <label htmlFor=\"username\">Username</label>\r\n\t\t <input type=\"text\" name=\"username\" placeholder=\"username\" value={this.state.username} onChange={this.handleUsernameChange} />\r\n\t\t</div>\r\n\t\t<div className=\"form-group\">\r\n\t\t <label htmlFor=\"email\">Email</label>\r\n\t\t <input type=\"text\" name=\"email\" placeholder=\"email\" value={this.state.email} onChange={this.handleEmailChange} />\r\n\t\t</div>\r\n\t\t<div className=\"form-group\">\r\n\t\t <label htmlFor=\"password\">Password</label>\r\n\t\t <p>Password require Lowecase, uppercase and number</p>\r\n\t\t <input type=\"password\" name=\"pasword\" placeholder=\"password\" value={this.state.password} onChange={this.handlePasswordChange} />\r\n\t\t</div>\r\n\t\t<div className=\"footer\">\r\n\t\t<button type=\"submit\" className=\"btn\">\r\n\t\tRegister\r\n\t\t</button>\r\n\t\t</div>\r\n\t\t</div>\r\n\t\t</form>\r\n\t\t</div>\r\n\t\t\r\n\t\t</div>\r\n\t\r\n\t\r\n\t\r\n\t);\r\n\t} \r\n     //addition\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"Signup\">{this.state.newUser === null ? this.renderForm() : this.renderConfirmationForm()}</div>\r\n\t\t);\r\n\t}\r\n}","import React from \"react\";\nimport \"./App.scss\";\nimport { Login, Register } from \"./components/login/index\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogginActive: true\n    };\n  }\n\n  componentDidMount() {\n    //Add .right by default\n    this.rightSide.classList.add(\"right\");\n  }\n\n  changeState() {\n    const { isLogginActive } = this.state;\n\n    if (isLogginActive) {\n      this.rightSide.classList.remove(\"right\");\n      this.rightSide.classList.add(\"left\");\n    } else {\n      this.rightSide.classList.remove(\"left\");\n      this.rightSide.classList.add(\"right\");\n    }\n    this.setState(prevState => ({ isLogginActive: !prevState.isLogginActive }));\n  }\n\n  render() {\n    const { isLogginActive } = this.state;\n    const current = isLogginActive ? \"Register\" : \"Login\";\n    const currentActive = isLogginActive ? \"login\" : \"register\";\n    return (\n      <div className=\"App\">\n        <div className=\"login\">\n          <div className=\"container\" ref={ref => (this.container = ref)}>\n            {isLogginActive && (\n              <Login containerRef={ref => (this.current = ref)} />\n            )}\n            {!isLogginActive && (\n              <Register containerRef={ref => (this.current = ref)} />\n            )}\n          </div>\n          <RightSide\n            current={current}\n            currentActive={currentActive}\n            containerRef={ref => (this.rightSide = ref)}\n            onClick={this.changeState.bind(this)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst RightSide = props => {\n  return (\n    <div\n      className=\"right-side\"\n      ref={props.containerRef}\n      onClick={props.onClick}\n    >\n      <div className=\"inner-container\">\n        <div className=\"text\">{props.current}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Amplify from \"aws-amplify\";\n\nimport * as serviceWorker from './serviceWorker';\n\nAmplify.configure({\n\tAuth: {\n\t\tmandatorySignId: true,\n\t\tregion: \"us-east-1\",\n\t\tuserPoolId: \"us-east-1_gOSIRZBy7\",\n\t\tuserPoolWebClientId: \"2ho6qk4plnut1fb42921l7s0qa\"\n\t}\n});\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/user.8aea2cbc.svg\";"],"sourceRoot":""}